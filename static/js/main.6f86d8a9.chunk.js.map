{"version":3,"sources":["images/beer.png","images/corana.png","logo.svg","components/NavBar.js","components/TopImage.js","components/Query.js","components/BottomImage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","maxWidth","img","height","overflow","display","width","TopImage","useTheme","src","corana","alt","Query","props","useState","q1","setQ1","q2","setQ2","q3","setQ3","q4","setQ4","q5","setQ5","q6","setQ6","q7","setQ7","q8","setQ8","FormControlLabel","control","Checkbox","checked","onChange","e","target","value","label","Button","style","margin","onClick","setResult","setBeer","BottomImage","beer","createMuiTheme","palette","primary","red","responsiveFontSizes","App","result","ThemeProvider","Container","Grid","container","item","md","href","rel","justify","Paper","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6f86d8a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beer.4a33bab6.png\";","module.exports = __webpack_public_path__ + \"static/media/corana.a735d38a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            CORANA KIDS TEST ':)'\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport corana from '../images/corana.png'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n \r\n  img: {\r\n    height: 255,\r\n    maxWidth: 400,\r\n    overflow: 'hidden',\r\n    display: 'block',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport default function TopImage() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <img\r\n        className={classes.img}\r\n        src={corana}\r\n        alt=\"Carona Pic\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React,{useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\nconst useStyles = makeStyles(theme => {\r\n\r\n})\r\n\r\nexport default function Query(props) {\r\n    const classes = useStyles()\r\n    const [q1, setQ1] = useState(false)\r\n    const [q2, setQ2] = useState(false)\r\n    const [q3, setQ3] = useState(false)\r\n    const [q4, setQ4] = useState(false)\r\n    const [q5, setQ5] = useState(false)\r\n    const [q6, setQ6] = useState(false)\r\n    const [q7, setQ7] = useState(false)\r\n    const [q8, setQ8] = useState(false)\r\n\r\n    function resetQuery() {\r\n        setQ1(false)\r\n        setQ2(false)\r\n        setQ3(false)\r\n        setQ4(false)\r\n        setQ5(false)\r\n        setQ6(false)\r\n        setQ7(false)\r\n        setQ8(false)\r\n        props.setBeer(false)\r\n        props.setResult(\"\")\r\n    }\r\n   \r\n\r\n\r\n    function seeResult() {\r\n        if (q1 && q2 === false && q3 && q4 === false && q5 === false && q6 === false && q7 === false && q8 === false){\r\n            props.setResult(\"YOU ARE SAFE FROM CORANA\")\r\n        } else {\r\n            props.setResult(\"YOU MUST HAVE DONE SOMETHING WRONG CUZ ITS CORANA TIME!!!!\")\r\n            props.setBeer(true)\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n            <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={q1}\r\n            onChange={(e) => setQ1(e.target.checked)}\r\n            value={q1}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"HAVE YOU WASHED YOUR HANDS 600 TIMES?\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={q2}\r\n            onChange={(e) => setQ2(e.target.checked)}\r\n            value={q2}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"HAVE YOU BEEN IN CONTACT WITH HUMANS TODAY?\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={q3}\r\n            onChange={(e) => setQ3(e.target.checked)}\r\n            value={q3}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"HAVE YOU TAKEN 600000000 SHOWERS TODAY?\r\n        \"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={q4}\r\n            onChange={(e) => setQ4(e.target.checked)}\r\n            value={q4}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"HAVE YOU COME OUT OF YOUR ROOM TODAY?\r\n        \"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={q5}\r\n            onChange={(e) => setQ5(e.target.checked)}\r\n            value={q5}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"HAVE YOU EATEN A BAT TODAY?\r\n        \"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={q6}\r\n            onChange={(e) => setQ6(e.target.checked)}\r\n            value={q6}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"HAVE YOU GIVEN CPU TO A SNAKE TODAY?\r\n        \"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={q7}\r\n            onChange={(e) => setQ7(e.target.checked)}\r\n            value={q7}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"HAVE YOU LICKED A DOORKNOB TODAY?\r\n        \"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={q8}\r\n            onChange={(e) => setQ8(e.target.checked)}\r\n            value={q8}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"HAS A GOAT TOUCHED YOUR FACE TODAY?\r\n        \"\r\n      />\r\n      <Button variant=\"contained\" style={{margin:8}} color=\"primary\" onClick={seeResult}>\r\n  See Results\r\n</Button>\r\n<Button variant=\"contained\" color=\"secondary\" onClick={resetQuery}>\r\n  Reset\r\n</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport beer from '../images/beer.png'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n \r\n  img: {\r\n    width: \"auto\",\r\n    height: \"400px\"\r\n  },\r\n}));\r\n\r\nexport default function BottomImage() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <img\r\n        className={classes.img}\r\n        src={beer}\r\n        alt=\"Beer Pic\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React,{useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CssBaseLine from '@material-ui/core/CssBaseline'\nimport { \n  ThemeProvider,\n  createMuiTheme,\n  responsiveFontSizes\n }\nfrom '@material-ui/core/styles'\nimport NavBar from './components/NavBar'\nimport { red, orange } from '@material-ui/core/colors';\nimport Container from '@material-ui/core/Container';\nimport TopImage from './components/TopImage'\nimport Grid from '@material-ui/core/Grid';\nimport Query from './components/Query'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport beerImg from './images/beer.png'\nimport BottomImage from './components/BottomImage'\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: red\n  }\n})\ntheme = responsiveFontSizes(theme)\n\nfunction App() {\n  const [result,setResult] = useState(\"\")\n  const [beer,setBeer] = useState(false)\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <CssBaseLine />\n        <Container maxWidth=\"md\">\n          <NavBar />\n          <Grid container>\n            <Grid item md={6}>\n              <div>\n              <TopImage />\n              </div>\n              <div>\n              <a href=\"https://knowyourmeme.com/memes/people-with-coronavirus-love-to-travel\" target=\"_blank\" rel=\"nofollow noopener\">Know Your Meme</a>\n              </div>\n              \n            </Grid>\n            <Grid item md={6}>\n              <Query setBeer={setBeer} setResult={setResult} />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\">\n            <Grid item md={6}>\n              {beer && <BottomImage />}\n            </Grid>\n            \n              <Grid item md={6}>\n                <Paper>\n                  <Typography variant=\"h3\" component=\"h3\">\n                    {result}\n                  </Typography>\n                </Paper>\n              </Grid>\n            \n          </Grid>\n        </Container>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}